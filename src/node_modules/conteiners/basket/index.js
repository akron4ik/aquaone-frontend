import React, {Component} from "react";
import {connect} from 'react-redux';
import * as R from 'ramda';
import {Link} from "react-router-dom";

import Layout from 'conteiners/layout';
import {
    getBasketProductsWithCount,
    getTotalBasketPrice

} from 'selectors';
import {addProductToBasket, removeItemFromBasket, removeProductFromBasket, basketCheckout, cleanBasket} from "actions";



const Basket = ({products,
                 totalPrice,
                 addProductToBasket,
                 removeProductFromBasket,
                 basketCheckout,
                 cleanBasket,
                 removeItemFromBasket}) => {

        const isBasketEmpty = R.isEmpty(products);
        const renderContent = () => (
            <div>
                {isBasketEmpty && <div>
                    <div className="main-content text-center empty-cart-content space-padding-tb-60">
                        <div className="container">
                            <span className="close-empty-cart"></span>
                            <h3>Ваша корзина пуста</h3>
                            <Link to="/" className="bordersolid-2 btn-return">В магазин <span
                                className="icon-arr"></span></Link>
                        </div>
                    </div>
                </div>}
                <div className="container">
                <div className="row">
                <div className="col-md-8">
                    {R.not(isBasketEmpty) && <h3>Корзина покупок</h3>}
                    <table className="table cart-table space-30">
                        <tbody>
                        {products.map((product, index) =>(
                            <tr className="item_cart" key={index}>
                                <td className="product-photo" ><img src={product.image} alt="Futurelife"/></td>
                                <td className="produc-name"><a title="">{product.name}</a>
                                    <div className="quantity input-group">
                                        <button type="button" className="quantity-left-minus btn btn-number js-minus"
                                                data-type="minus" /*data-field=""*/>
                                            <span className="minus-icon" onClick={() => removeItemFromBasket(product.id)}>-</span>
                                        </button>
                                        <a className="product_quantity_number js-number"> {product.count} </a>
                                        <button type="button" className="quantity-right-plus btn btn-number js-plus"
                                                data-type="plus" /*data-field=""*/>
                                            <span className="plus-icon" onClick={() => addProductToBasket(product.id)}>+</span>
                                        </button>
                                    </div>
                                </td>
                                <td className="total-price">
                                    <a className="remove" title=""  onClick={() => removeProductFromBasket(product.id)}>x</a>
                                    <p className="price">{product.subPrice}</p>
                                </td>
                            </tr>
                           ))}
                        </tbody>
                    </table>
                    {R.not(isBasketEmpty) && <div className="row">
                        <div className="col-xs-12 col-sm-6">
                            <Link to="/" className="btn link-button hover-black continue">Вернуться в магазин</Link>
                        </div>
                        <div className="col-xs-12 col-sm-6">
                            <a className="btn link-button hover-black update" onClick={cleanBasket}>Очистить корзину</a>
                        </div>
                    </div>}

                </div>
                    {R.not(isBasketEmpty) &&
                    <div className="col-md-4">
                        <h3>Информация о заказе</h3>
                        <div className="text-price">
                            <ul>
                                <li><span className="text">Общая сумма: </span><span className="number">{totalPrice}</span></li>
                            </ul>
                        </div>
                        <Link className="btn link-button hover-white checkout" to="/checkout" title="Proceed to checkout" >Оформить заказ</Link>
                        {/*onClick={() => basketCheckout(products)}*/}
                    </div>}
                </div>
                </div>

            </div>
        )


        return(
            <Layout>
                <br></br>
                {renderContent()}
                <br></br>



            </Layout>
        )

}

const mapStateToProps = state => {
    return {
        products: getBasketProductsWithCount(state),
        totalPrice: getTotalBasketPrice(state)
    }
};

const mapDispatchToProps = {
    addProductToBasket,
    removeProductFromBasket,
    basketCheckout,
    cleanBasket,
    removeItemFromBasket

};

export default connect(mapStateToProps, mapDispatchToProps)(Basket);