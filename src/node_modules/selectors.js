import * as R from 'ramda'

export const getProductById = (state, id) => R.prop(id, state.products);

export const getActiveCategoryId = ownProps => R.path(['match', 'params', 'id'], ownProps);

export const getProducts = (state, ownProps) => {
    const activeCategoryId = getActiveCategoryId(ownProps);
    const values = getCategoryProducts(activeCategoryId, state);

    return values;
};

export const getCategoryProducts = (categoryId, state) => {

    console.log('category', categoryId);
    const applySearch = item => R.contains(
        state.productsPage.search.toLowerCase(),
        R.prop('name', item).toLowerCase()
    );

    const products = R.compose(
        R.filter(applySearch),
        R.map(id => getProductById(state, id))
    )(state.productsPage.ids)

    if (categoryId === undefined){
        return products;
    }
    const vals = [];
    products.forEach(function (item) {
        console.log('element', item.categoryId);
        if (Number(item.categoryId) === Number(categoryId)){
            vals.push(item)
        };

    });

    return vals;
};

export const getTotalBasketCount = state => R.length(state.basket);

export const getTotalBasketPrice = state => {
    const totalPrice = R.compose(
        R.sum,
        R.pluck('price'),
        R.map(id => getProductById(state, id))
    )(state.basket);
    return totalPrice;
};

export const getCategories = state => R.values(state.categories);
